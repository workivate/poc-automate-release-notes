# Name of the workflow
name: Release

# Run on every merge or commit to the main branch
on:
  push:
    branches:
      - main

# Automatically create a GitHub Release
jobs:
  release:
    name: "Release"
    runs-on: "ubuntu-latest"
    steps:
         - name: "Checkout repository"
           uses: actions/checkout@v2
           with:
            fetch-depth: 0

         - name: "Get package version"
           id: package-version
           uses: "martinbeentjes/npm-get-version-action@main"

         - name: "Get latest version from git tag"
           id: latest-version
           shell: bash
           run: |
             echo "tag=$(git tag -l '${{ steps.version_prefix.outputs.PREFIX }}*' | sed 's/^[^[:digit:]].*//g' | sort -V | tail -1)" >> $GITHUB_OUTPUT

         - name: "Compare the tag release value to the package.json version value, fail the workflow if the release is newer"
           id: compare-version
           shell: bash
           run: |
            echo "Comparing [${{ steps.latest-version.outputs.tag }}] to [${{ steps.package-version.outputs.current-version }}]"
            
            LATEST_VERSION=${{ steps.latest-version.outputs.tag }}
            PACKAGE_VERSION=${{ steps.package-version.outputs.current-version }}
            
            LOWEST_VERSION=$(printf '%s\n' "$PACKAGE_VERSION" "$LATEST_VERSION" | sort -V | head -n1)
            
            if [ "$LOWEST_VERSION" = "$PACKAGE_VERSION" ]; then
                echo "ERROR"
                exit 1
            fi

         - uses: "marvinpinto/action-automatic-releases@latest"
           with:
             path: aarondarwish/learn-github-actions
             repo_token: "${{ secrets.GITHUB_TOKEN }}"
             automatic_release_tag: ${{ steps.package-version.outputs.current-version}} 
             prerelease: false

